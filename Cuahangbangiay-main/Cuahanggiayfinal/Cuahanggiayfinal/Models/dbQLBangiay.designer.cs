#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cuahanggiayfinal.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="shopgiay9999")]
	public partial class dbQLBangiayDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertsize(size instance);
    partial void Updatesize(size instance);
    partial void Deletesize(size instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void Insertchitietdonhang(chitietdonhang instance);
    partial void Updatechitietdonhang(chitietdonhang instance);
    partial void Deletechitietdonhang(chitietdonhang instance);
    partial void InsertCATEGORY(CATEGORY instance);
    partial void UpdateCATEGORY(CATEGORY instance);
    partial void DeleteCATEGORY(CATEGORY instance);
    partial void Insertcart(cart instance);
    partial void Updatecart(cart instance);
    partial void Deletecart(cart instance);
    partial void Insertbrand(brand instance);
    partial void Updatebrand(brand instance);
    partial void Deletebrand(brand instance);
    partial void Insertad(ad instance);
    partial void Updatead(ad instance);
    partial void Deletead(ad instance);
    #endregion
		
		public dbQLBangiayDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["shopgiay9999ConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBangiayDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBangiayDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBangiayDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBangiayDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<size> sizes
		{
			get
			{
				return this.GetTable<size>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<chitietdonhang> chitietdonhangs
		{
			get
			{
				return this.GetTable<chitietdonhang>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORY> CATEGORies
		{
			get
			{
				return this.GetTable<CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<cart> carts
		{
			get
			{
				return this.GetTable<cart>();
			}
		}
		
		public System.Data.Linq.Table<brand> brands
		{
			get
			{
				return this.GetTable<brand>();
			}
		}
		
		public System.Data.Linq.Table<ad> ads
		{
			get
			{
				return this.GetTable<ad>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.size")]
	public partial class size : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sizeId;
		
		private int _sizegiay;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsizeIdChanging(int value);
    partial void OnsizeIdChanged();
    partial void OnsizegiayChanging(int value);
    partial void OnsizegiayChanged();
    #endregion
		
		public size()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sizeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sizeId
		{
			get
			{
				return this._sizeId;
			}
			set
			{
				if ((this._sizeId != value))
				{
					this.OnsizeIdChanging(value);
					this.SendPropertyChanging();
					this._sizeId = value;
					this.SendPropertyChanged("sizeId");
					this.OnsizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sizegiay", DbType="Int NOT NULL")]
		public int sizegiay
		{
			get
			{
				return this._sizegiay;
			}
			set
			{
				if ((this._sizegiay != value))
				{
					this.OnsizegiayChanging(value);
					this.SendPropertyChanging();
					this._sizegiay = value;
					this.SendPropertyChanged("sizegiay");
					this.OnsizegiayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="size_PRODUCT", Storage="_PRODUCTs", ThisKey="sizeId", OtherKey="sizeId")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.size = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.size = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private string _productName;
		
		private System.Nullable<int> _sizeId;
		
		private System.Nullable<int> _catId;
		
		private System.Nullable<int> _brandId;
		
		private string _product_desc;
		
		private System.Nullable<System.DateTime> _ngaycapnhat;
		
		private string _img;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<int> _soluongton;
		
		private EntitySet<chitietdonhang> _chitietdonhangs;
		
		private EntityRef<size> _size;
		
		private EntityRef<CATEGORY> _CATEGORY;
		
		private EntityRef<brand> _brand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OnsizeIdChanging(System.Nullable<int> value);
    partial void OnsizeIdChanged();
    partial void OncatIdChanging(System.Nullable<int> value);
    partial void OncatIdChanged();
    partial void OnbrandIdChanging(System.Nullable<int> value);
    partial void OnbrandIdChanged();
    partial void Onproduct_descChanging(string value);
    partial void Onproduct_descChanged();
    partial void OnngaycapnhatChanging(System.Nullable<System.DateTime> value);
    partial void OnngaycapnhatChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnsoluongtonChanging(System.Nullable<int> value);
    partial void OnsoluongtonChanged();
    #endregion
		
		public PRODUCT()
		{
			this._chitietdonhangs = new EntitySet<chitietdonhang>(new Action<chitietdonhang>(this.attach_chitietdonhangs), new Action<chitietdonhang>(this.detach_chitietdonhangs));
			this._size = default(EntityRef<size>);
			this._CATEGORY = default(EntityRef<CATEGORY>);
			this._brand = default(EntityRef<brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sizeId", DbType="Int")]
		public System.Nullable<int> sizeId
		{
			get
			{
				return this._sizeId;
			}
			set
			{
				if ((this._sizeId != value))
				{
					if (this._size.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsizeIdChanging(value);
					this.SendPropertyChanging();
					this._sizeId = value;
					this.SendPropertyChanged("sizeId");
					this.OnsizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catId", DbType="Int")]
		public System.Nullable<int> catId
		{
			get
			{
				return this._catId;
			}
			set
			{
				if ((this._catId != value))
				{
					if (this._CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncatIdChanging(value);
					this.SendPropertyChanging();
					this._catId = value;
					this.SendPropertyChanged("catId");
					this.OncatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brandId", DbType="Int")]
		public System.Nullable<int> brandId
		{
			get
			{
				return this._brandId;
			}
			set
			{
				if ((this._brandId != value))
				{
					if (this._brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbrandIdChanging(value);
					this.SendPropertyChanging();
					this._brandId = value;
					this.SendPropertyChanged("brandId");
					this.OnbrandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_desc", DbType="NVarChar(MAX)")]
		public string product_desc
		{
			get
			{
				return this._product_desc;
			}
			set
			{
				if ((this._product_desc != value))
				{
					this.Onproduct_descChanging(value);
					this.SendPropertyChanging();
					this._product_desc = value;
					this.SendPropertyChanged("product_desc");
					this.Onproduct_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaycapnhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngaycapnhat
		{
			get
			{
				return this._ngaycapnhat;
			}
			set
			{
				if ((this._ngaycapnhat != value))
				{
					this.OnngaycapnhatChanging(value);
					this.SendPropertyChanging();
					this._ngaycapnhat = value;
					this.SendPropertyChanged("ngaycapnhat");
					this.OnngaycapnhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="VarChar(50)")]
		public string img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluongton", DbType="Int")]
		public System.Nullable<int> soluongton
		{
			get
			{
				return this._soluongton;
			}
			set
			{
				if ((this._soluongton != value))
				{
					this.OnsoluongtonChanging(value);
					this.SendPropertyChanging();
					this._soluongton = value;
					this.SendPropertyChanged("soluongton");
					this.OnsoluongtonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_chitietdonhang", Storage="_chitietdonhangs", ThisKey="productId", OtherKey="productId")]
		public EntitySet<chitietdonhang> chitietdonhangs
		{
			get
			{
				return this._chitietdonhangs;
			}
			set
			{
				this._chitietdonhangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="size_PRODUCT", Storage="_size", ThisKey="sizeId", OtherKey="sizeId", IsForeignKey=true)]
		public size size
		{
			get
			{
				return this._size.Entity;
			}
			set
			{
				size previousValue = this._size.Entity;
				if (((previousValue != value) 
							|| (this._size.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._size.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._size.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._sizeId = value.sizeId;
					}
					else
					{
						this._sizeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("size");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_PRODUCT", Storage="_CATEGORY", ThisKey="catId", OtherKey="catId", IsForeignKey=true)]
		public CATEGORY CATEGORY
		{
			get
			{
				return this._CATEGORY.Entity;
			}
			set
			{
				CATEGORY previousValue = this._CATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORY.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._CATEGORY.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._catId = value.catId;
					}
					else
					{
						this._catId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CATEGORY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="brand_PRODUCT", Storage="_brand", ThisKey="brandId", OtherKey="brandId", IsForeignKey=true)]
		public brand brand
		{
			get
			{
				return this._brand.Entity;
			}
			set
			{
				brand previousValue = this._brand.Entity;
				if (((previousValue != value) 
							|| (this._brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._brand.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._brand.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._brandId = value.brandId;
					}
					else
					{
						this._brandId = default(Nullable<int>);
					}
					this.SendPropertyChanged("brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chitietdonhangs(chitietdonhang entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_chitietdonhangs(chitietdonhang entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customerId;
		
		private string _customerName;
		
		private string _address;
		
		private string _city;
		
		private string _country;
		
		private string _phone;
		
		private string _customeremail;
		
		private string _taikhoan;
		
		private string _matkhau;
		
		private EntitySet<cart> _carts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncustomerIdChanging(int value);
    partial void OncustomerIdChanged();
    partial void OncustomerNameChanging(string value);
    partial void OncustomerNameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OncustomeremailChanging(string value);
    partial void OncustomeremailChanged();
    partial void OntaikhoanChanging(string value);
    partial void OntaikhoanChanged();
    partial void OnmatkhauChanging(string value);
    partial void OnmatkhauChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._carts = new EntitySet<cart>(new Action<cart>(this.attach_carts), new Action<cart>(this.detach_carts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this.OncustomerNameChanging(value);
					this.SendPropertyChanging();
					this._customerName = value;
					this.SendPropertyChanged("customerName");
					this.OncustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customeremail", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string customeremail
		{
			get
			{
				return this._customeremail;
			}
			set
			{
				if ((this._customeremail != value))
				{
					this.OncustomeremailChanging(value);
					this.SendPropertyChanging();
					this._customeremail = value;
					this.SendPropertyChanged("customeremail");
					this.OncustomeremailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taikhoan", DbType="VarChar(50)")]
		public string taikhoan
		{
			get
			{
				return this._taikhoan;
			}
			set
			{
				if ((this._taikhoan != value))
				{
					this.OntaikhoanChanging(value);
					this.SendPropertyChanging();
					this._taikhoan = value;
					this.SendPropertyChanged("taikhoan");
					this.OntaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matkhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string matkhau
		{
			get
			{
				return this._matkhau;
			}
			set
			{
				if ((this._matkhau != value))
				{
					this.OnmatkhauChanging(value);
					this.SendPropertyChanging();
					this._matkhau = value;
					this.SendPropertyChanged("matkhau");
					this.OnmatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_cart", Storage="_carts", ThisKey="customerId", OtherKey="customerId")]
		public EntitySet<cart> carts
		{
			get
			{
				return this._carts;
			}
			set
			{
				this._carts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chitietdonhang")]
	public partial class chitietdonhang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cartId;
		
		private int _productId;
		
		private System.Nullable<int> _soluong;
		
		private System.Nullable<decimal> _Dongia;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
		private EntityRef<cart> _cart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncartIdChanging(int value);
    partial void OncartIdChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnsoluongChanging(System.Nullable<int> value);
    partial void OnsoluongChanged();
    partial void OnDongiaChanging(System.Nullable<decimal> value);
    partial void OnDongiaChanged();
    #endregion
		
		public chitietdonhang()
		{
			this._PRODUCT = default(EntityRef<PRODUCT>);
			this._cart = default(EntityRef<cart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int cartId
		{
			get
			{
				return this._cartId;
			}
			set
			{
				if ((this._cartId != value))
				{
					if (this._cart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncartIdChanging(value);
					this.SendPropertyChanging();
					this._cartId = value;
					this.SendPropertyChanged("cartId");
					this.OncartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int")]
		public System.Nullable<int> soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dongia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Dongia
		{
			get
			{
				return this._Dongia;
			}
			set
			{
				if ((this._Dongia != value))
				{
					this.OnDongiaChanging(value);
					this.SendPropertyChanging();
					this._Dongia = value;
					this.SendPropertyChanged("Dongia");
					this.OnDongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_chitietdonhang", Storage="_PRODUCT", ThisKey="productId", OtherKey="productId", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.chitietdonhangs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.chitietdonhangs.Add(this);
						this._productId = value.productId;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cart_chitietdonhang", Storage="_cart", ThisKey="cartId", OtherKey="cartId", IsForeignKey=true)]
		public cart cart
		{
			get
			{
				return this._cart.Entity;
			}
			set
			{
				cart previousValue = this._cart.Entity;
				if (((previousValue != value) 
							|| (this._cart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cart.Entity = null;
						previousValue.chitietdonhangs.Remove(this);
					}
					this._cart.Entity = value;
					if ((value != null))
					{
						value.chitietdonhangs.Add(this);
						this._cartId = value.cartId;
					}
					else
					{
						this._cartId = default(int);
					}
					this.SendPropertyChanged("cart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORY")]
	public partial class CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catId;
		
		private string _catName;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncatIdChanging(int value);
    partial void OncatIdChanged();
    partial void OncatNameChanging(string value);
    partial void OncatNameChanged();
    #endregion
		
		public CATEGORY()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catId
		{
			get
			{
				return this._catId;
			}
			set
			{
				if ((this._catId != value))
				{
					this.OncatIdChanging(value);
					this.SendPropertyChanging();
					this._catId = value;
					this.SendPropertyChanged("catId");
					this.OncatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string catName
		{
			get
			{
				return this._catName;
			}
			set
			{
				if ((this._catName != value))
				{
					this.OncatNameChanging(value);
					this.SendPropertyChanging();
					this._catName = value;
					this.SendPropertyChanged("catName");
					this.OncatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_PRODUCT", Storage="_PRODUCTs", ThisKey="catId", OtherKey="catId")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cart")]
	public partial class cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cartId;
		
		private System.Nullable<System.DateTime> _ngaydat;
		
		private System.Nullable<System.DateTime> _ngaygiao;
		
		private System.Nullable<int> _customerId;
		
		private System.Nullable<bool> _tinhtrang;
		
		private System.Nullable<decimal> _tongtien;
		
		private EntitySet<chitietdonhang> _chitietdonhangs;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncartIdChanging(int value);
    partial void OncartIdChanged();
    partial void OnngaydatChanging(System.Nullable<System.DateTime> value);
    partial void OnngaydatChanged();
    partial void OnngaygiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnngaygiaoChanged();
    partial void OncustomerIdChanging(System.Nullable<int> value);
    partial void OncustomerIdChanged();
    partial void OntinhtrangChanging(System.Nullable<bool> value);
    partial void OntinhtrangChanged();
    partial void OntongtienChanging(System.Nullable<decimal> value);
    partial void OntongtienChanged();
    #endregion
		
		public cart()
		{
			this._chitietdonhangs = new EntitySet<chitietdonhang>(new Action<chitietdonhang>(this.attach_chitietdonhangs), new Action<chitietdonhang>(this.detach_chitietdonhangs));
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cartId
		{
			get
			{
				return this._cartId;
			}
			set
			{
				if ((this._cartId != value))
				{
					this.OncartIdChanging(value);
					this.SendPropertyChanging();
					this._cartId = value;
					this.SendPropertyChanged("cartId");
					this.OncartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaydat", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngaydat
		{
			get
			{
				return this._ngaydat;
			}
			set
			{
				if ((this._ngaydat != value))
				{
					this.OnngaydatChanging(value);
					this.SendPropertyChanging();
					this._ngaydat = value;
					this.SendPropertyChanged("ngaydat");
					this.OnngaydatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaygiao", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngaygiao
		{
			get
			{
				return this._ngaygiao;
			}
			set
			{
				if ((this._ngaygiao != value))
				{
					this.OnngaygiaoChanging(value);
					this.SendPropertyChanging();
					this._ngaygiao = value;
					this.SendPropertyChanged("ngaygiao");
					this.OnngaygiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="Int")]
		public System.Nullable<int> customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tinhtrang", DbType="Bit")]
		public System.Nullable<bool> tinhtrang
		{
			get
			{
				return this._tinhtrang;
			}
			set
			{
				if ((this._tinhtrang != value))
				{
					this.OntinhtrangChanging(value);
					this.SendPropertyChanging();
					this._tinhtrang = value;
					this.SendPropertyChanged("tinhtrang");
					this.OntinhtrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongtien", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> tongtien
		{
			get
			{
				return this._tongtien;
			}
			set
			{
				if ((this._tongtien != value))
				{
					this.OntongtienChanging(value);
					this.SendPropertyChanging();
					this._tongtien = value;
					this.SendPropertyChanged("tongtien");
					this.OntongtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cart_chitietdonhang", Storage="_chitietdonhangs", ThisKey="cartId", OtherKey="cartId")]
		public EntitySet<chitietdonhang> chitietdonhangs
		{
			get
			{
				return this._chitietdonhangs;
			}
			set
			{
				this._chitietdonhangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_cart", Storage="_CUSTOMER", ThisKey="customerId", OtherKey="customerId", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.carts.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.carts.Add(this);
						this._customerId = value.customerId;
					}
					else
					{
						this._customerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chitietdonhangs(chitietdonhang entity)
		{
			this.SendPropertyChanging();
			entity.cart = this;
		}
		
		private void detach_chitietdonhangs(chitietdonhang entity)
		{
			this.SendPropertyChanging();
			entity.cart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.brand")]
	public partial class brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _brandId;
		
		private string _branName;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbrandIdChanging(int value);
    partial void OnbrandIdChanged();
    partial void OnbranNameChanging(string value);
    partial void OnbranNameChanged();
    #endregion
		
		public brand()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brandId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int brandId
		{
			get
			{
				return this._brandId;
			}
			set
			{
				if ((this._brandId != value))
				{
					this.OnbrandIdChanging(value);
					this.SendPropertyChanging();
					this._brandId = value;
					this.SendPropertyChanged("brandId");
					this.OnbrandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string branName
		{
			get
			{
				return this._branName;
			}
			set
			{
				if ((this._branName != value))
				{
					this.OnbranNameChanging(value);
					this.SendPropertyChanging();
					this._branName = value;
					this.SendPropertyChanged("branName");
					this.OnbranNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="brand_PRODUCT", Storage="_PRODUCTs", ThisKey="brandId", OtherKey="brandId")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.brand = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ad")]
	public partial class ad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _adminId;
		
		private string _adminEmail;
		
		private string _adminName;
		
		private string _adminTaikhoan;
		
		private string _adminPass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnadminIdChanging(int value);
    partial void OnadminIdChanged();
    partial void OnadminEmailChanging(string value);
    partial void OnadminEmailChanged();
    partial void OnadminNameChanging(string value);
    partial void OnadminNameChanged();
    partial void OnadminTaikhoanChanging(string value);
    partial void OnadminTaikhoanChanged();
    partial void OnadminPassChanging(string value);
    partial void OnadminPassChanged();
    #endregion
		
		public ad()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int adminId
		{
			get
			{
				return this._adminId;
			}
			set
			{
				if ((this._adminId != value))
				{
					this.OnadminIdChanging(value);
					this.SendPropertyChanging();
					this._adminId = value;
					this.SendPropertyChanged("adminId");
					this.OnadminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminEmail", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string adminEmail
		{
			get
			{
				return this._adminEmail;
			}
			set
			{
				if ((this._adminEmail != value))
				{
					this.OnadminEmailChanging(value);
					this.SendPropertyChanging();
					this._adminEmail = value;
					this.SendPropertyChanged("adminEmail");
					this.OnadminEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminName", DbType="NVarChar(255)")]
		public string adminName
		{
			get
			{
				return this._adminName;
			}
			set
			{
				if ((this._adminName != value))
				{
					this.OnadminNameChanging(value);
					this.SendPropertyChanging();
					this._adminName = value;
					this.SendPropertyChanged("adminName");
					this.OnadminNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminTaikhoan", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string adminTaikhoan
		{
			get
			{
				return this._adminTaikhoan;
			}
			set
			{
				if ((this._adminTaikhoan != value))
				{
					this.OnadminTaikhoanChanging(value);
					this.SendPropertyChanging();
					this._adminTaikhoan = value;
					this.SendPropertyChanged("adminTaikhoan");
					this.OnadminTaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminPass", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string adminPass
		{
			get
			{
				return this._adminPass;
			}
			set
			{
				if ((this._adminPass != value))
				{
					this.OnadminPassChanging(value);
					this.SendPropertyChanging();
					this._adminPass = value;
					this.SendPropertyChanged("adminPass");
					this.OnadminPassChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
